Набор тестов №6. ГСП: Прочее, заявка: Заявки на получение субсидии на оплату жилья и ЖКУ
========================================================================================
Проверяет прием и обработку заявлений по Вид заявки: **Заявки на получение субсидии на оплату жилья и ЖКУ**,
ГСП: **прочее**. Используется человек Тестова ПГУ Прочее, номера заявлений: 122675408, 122675409, 122675410, район на ТИ=159. 
Сначала загружает, обрабатывает и проверяет одно заявление, потом два.

Тест №1
-------
Загружает заявление для Тестова ПГУ Прочее

    #. Соединяюсь с БД ТИ.
    #. Перед загрузкой отмечаем все для района как загруженное.
    #. Удаляю ответы на заявки человека на ТИ.
    #. Отмечаю заявление  122675408 к загрузке на ТИ.
    #. Отсоединяюсь от ТИ.
    #. Соединяюсь с АСП.
    #. Удаляет в АСП все не обработанные заявления.
    #. Удаляю по человеку с АСП заявления, ответы, скандоки.
    #. Отсоединяюсь от АСП.
    #. Пробуем загрузить заявление.
    #. Подождать, когда отработает прогресс бар.
    #. Проверить, что пришло одно заявление.

Тест №2
-------
Регистрирует заявление, проверяет создание 1-х заявление с заполненными F6 не NULL, F6_izm=NULL.

    #. Захожу в госуслуги.
    #. Связывание с ПКУ.
    #. Устанавливаю фильтр по ФИО.
    #. Запись заявлений.
    #. сформировани список для массой регистрации.
    #. Вот тут надо нажать на 1, в списке.
    #. Подождем прогресс запись заявок в БД.
    #. Выйти из записи.
    #. Проверить, как записалось. Для этого человека должно быть создано 2 f6.
    #. Соединяюсь с БД АСП.
    #. Получает кол-во заявлений и изменений к ним для человека.
    #. Закрыть соединение с БД.
    #. Проверяет, что создалось одно заявление и один izm.
    #. Проверяет, что каждый F6 и F6_IZM заполен.
        
Тест №3
-------
Делает решение принятому заявлению. Выставляет статус ИСПОЛНЕНО, тестовый комментарий с указанием номера заявления и прикладывается один файл. Решение сохраняет и возвращается в главное меню.

    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Заходит в заявление.
    #. Войти в заявку.
    #. Новый ответ из обложки заявления.
    #. Выставляет статус ИСПОЛНЕНО(3).
    #. Заполняет комментарий.
    #. Загружает файл.
    #. Жду загрузки файла.
    #. Вводит срок действия заявки.
    #. Выходит из заявки.
    #. Выход в главное.

Тест №4
-------
Скриптом проверяет правильно ли сохранилось в БД принятое решение по 1-м заявления 122675408. Визуально проверяет, чтобы не было в прикрепленных файлах otvet.txt.

   #. Соединяется с БД.
   #. Проверяет по заявлению 122675408.
   #. Закрывает соединение с БД.
   #. Захожу в госуслуги.
   #. Устанавливаю фильтр по ФИО.
   #. Заходит в заявление.
   #. Войти в заявку.
   #. Ищет на странице текст otvet.txt.
   #. Выходит из заявки.
   #. Выход в главное.

Тест №5
-------
Пытается повторно ввести статус по заявления 122675408. Визуально проверяет чтобы не было в прикрепленных файлах otvet.txt после отправки и во время ввода статуса.

   #. Соединяется с БД АСП.
   #. Устанавливаю время выгрузки для ответов, будто они выгружены.
   #. Отсоединяемся от ДБ АСП.
   #. Захожу в госуслуги.
   #. Устанавливаю фильтр по ФИО.
   #. Берет заявление.
   #. Войти в заявку.
   #. Ищет на странице текст otvet.txt.
   #. Новый ответ из обложки заявления.
   #. Ищет на странице текст otvet.txt.
   #. Выходит из заявки.
   #. Выход в главное.

Тест №6
-------
Заходит в заявление, вставляет комментарий из справочника, проверяет, что вставилось нормально. Выходит без сохранения.

   #. Захожу в госуслуги.
   #. Устанавливаю фильтр по ФИО.
   #. Перебираю два заявления.
   #. Войти в заявку.
   #. Новый ответ из обложки заявления.
   #. Выставляет статус Исполено(3).
   #. Заполняет комментарий.
   #. Сделать вставку из справочника.
   #. Сделать проверку, что в комментарии..
   #. Выходит из заявки.
   #. Выход в главное.

Тест №7
-------
Проверяет известную ошибку, когда при добавлении решений и выгрузке каждого может сохранятся много файлов решений (otvet.txt). Заходит в заявление, делает два решения, выгрузку после каждого. Проверяет скриптом в БД, должен быть один файл otvet.txt.

   #. Соединяется с БД.
   #. Захожу в госуслуги.
   #. Устанавливаю фильтр по ФИО.
   #. Берет заявление 265063t3.
   #. Делает два решения и выгрузку после каждого.
       * войти в заявку
       * новый ответ из обложки заявления
       * выставляет статус Исполено(3)
       * заполняет комментарий
       * сохраняет комментарий и статус
       * проверить, что вышло окно подтверждающее сохранение
       * загружает файл
       * жду загрузки файла
       * выходит из заявки
       * устанавливаю время выгрузки для ответов, будто они выгружены
   #. Выход в главное.
   #. Спросить в БД сколько файлов otvet.txt к заявлению 122675408.
   #. Отсоединяется от Бд.
   #. Выполняется проверка, кол-во файлов otvet.txt по заявлению  265063t3  должно быть 1.

Тест №8
-------
Загружает 2 заявления для Тестова ПГУ Прочее
   #. Человек.
   #. Соединяюсь с БД ТИ.
   #. Отмечаю заявление  122675408 к загрузке на ТИ.
   #. Отсоединяюсь от ТИ.
   #. Пробуем загрузить заявление.
   #. Подождать, когда отработает прогресс бар.
   #. Проверить, что загрузилось два заявления.


Тест №9
-------
Регистрирует два заявления, проверяет создание 3-х заявление (3-х, т.к. сейчас 2, до этого 1) с заполненными F6 не NULL, F6_izm=NULL.
   #. Захожу в госуслуги.
   #. Связывание с ПКУ.
   #. Устанавливаю фильтр по ФИО.
   #. Запись заявлений.
   #. Сформировани список для массовой регистрации.
   #. Вот тут надо нажать на 1, в списке.
   #. Подождем прогресс запись заявок в БД.
   #. Выйти из записи.
   #. Проверить, как записалось. Для этого человека должно быть создано 2 f6.
   #. Соединяюсь с БД АСП.
   #. Получает кол-во заявлений и изменений к ним для человека.
   #. Закрыть соединение с БД.
   #. Проверяет, что создалось одно заявление и один izm.
   #. Проверяет, что каждый F6 и F6_IZM заполен.
