Набор тестов №10. ГСП: Субсидии на оплату жилья и ЖК услуги, АСП: Заявки на получение субсидии на оплату жилья и ЖКУ.
=====================================================================================================================
Субсидии на оплату жилья и ЖК услуги.\\
Тестовый человек: Субсидия Оплата Жилья, 01.01.1960\\
Код госуслуги: test_case_10\\
Код района: 159\\
Номера заявлений: test_case_10_1, test_case_10_2, test_case_10_3, test_case_10_4\\
Вид ГСП: Субсидии на оплату жилья и ЖК услуги\\
Вид заявление АСП: Заявки на получение субсидии на оплату жилья и ЖКУ\\

Тест №1
-------
Удаляет из АСП заявления на человека, загружает и записывает одно заявление с ПГУ.

    #. Удаление из АСП.
    #. Отмечаю заявление test_case_10_1 к загрузке на ТИ.
    #. Загружаю заявление test_case_10_1.
    #. Пробуем загрузить заявление.
    #. Проверить, что загружено 1 заявление.
    #. Запись заявок.

       * Захожу в госуслуги.
       * Связывание с ПКУ.
       * Устанавливаю фильтр по ФИО.
       * Запись заявлений.
       * Перед формирование списка приведу галочки в состояние как на скриншоте.
       * Очистить дату с и по.
       * Установить галочку независимо от причины отказа.
       * Установить радиогруппу Со статусом 'отказано' в Зарегистрировать новое заявление.
       * Установить радиогруппу Со статусом 'назначено' в Зарегистрировать новые документы к заявлению.
       * Сформировани список.
       * Вот тут надо нажать на 1, в списке.
       * Подождем прогресс запись заявок в БД.
       * Выйти из записи.

.. figure:: _static/ts_10_1_1.png
   :alt: Положение галочек для теста 1.
   :align: center

   Положение галочек для теста 1.

Тест №2
-------
Загружает записывает второе заявления с ПГУ.
        
1. Отмечаю заявление test_case_10_2 к загрузке на ТИ. Остальные действия, включая положение галочек аналогичны тесту №1

Тест №3
-------
В двух принятых заявлениях визуально проверяет обязательные поля: вкладка госуслуги, контроль госуслуги, номера заявлений.

    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Захожу в обе заявке по очереди.

       * Войти в завку.
       * Проверить период назначения с.
       * Проверить период назначения по.
       * Проверить номер заявления в АСП.
       * Проверить наличие вкладки госуслуги.
       * Проверить, что есть контроль госуслуги.
       * Проверить, что контрол не пустой.
       * Выход.

Тест №4
-------
В двух принятых заявлениях выставляет отказ.

    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Захожу в обе заявке по очереди.

        * Войти в завку.
        * Нажать на отказ.
        * Выбрать причину.
        * Отказать и выйти.

Тест №5
-------
Загружает и записывает 3-е и 4-е заявления с ПГУ.

    #. Отмечаю заявление test_case_10_3, test_case_10_4 к загрузке на ТИ
    #. Загружаю заявления
    #. Пробуем загрузить заявление
    #. Подождать, когда отработает прогресс бар
    #. Проверить, что загружено 2 заявления
    #. Запись заявок
        * Захожу в госуслуги
        * Связывание с ПКУ
        * Устанавливаю фильтр по ФИО
        * Запись заявлений
        * Перед формирование списка приведу галочки в состояние как на скриншоте
        * Очистить дату с и по
        * Установить галочку независимо от причины отказа
        * Установить радиогруппу Со статусом 'отказано' в Зарегистрировать новые документы
        * Установить радиогруппу Со статусом 'назначено' в Зарегистрировать новые документы к заявлению
        * Сформировани список
        * Вот тут надо нажать на 1, в списке
        * Подождем прогресс запись заявок в БД
    #. Выйти из записи

.. figure:: _static/ts_10_1_2.png
   :alt: Положение галочек для теста 2.
   :align: center

   Положение галочек для теста 2.

Тест №6
-------
Заходит в ПКУ человека и визуально проверяет, что у него 2 заявления АСП (т.к. 2 последних должны быть записаны как изменения). Проверяет номера заявлений, даты: подачи, с, по.

    #. Проверить, что у человека показана только одна заявка.
    #. Зайти  в поиск и найти ПКУ человека.
    #. Зайти в ПКУ человека.
    #. Найти таблицу с заявками.
    #. Найти все строки.
    #. Подсчитать кол-во заявлений, ожидаем 2.
    #. Разберем строки с заявками на части - номер заявления, дата подачи, с, дата по.
    #. Проверяю заявление test_case_10_1, он должно прийти первым.
    #. Проверяю заявление test_case_10_2, он должно прийти вторым.

Тест №7
-------
Проверяет как записались в БД все 4-ре заявления ПГУ. 

    #. Считывает из БД f6 и f6izm по каждому заявлению test_case_10_1, test_case_10_2, test_case_10_3, test_case_10_4.
    #. Проверить, что все заявления имеют f6 и f6izm.
    #. Проверить, что f6 для test_case_10_1 и  test_case_10_2 не равны.
    #. Проверить, что f6 для test_case_10_2 и test_case_10_3 и test_case_10_4 равны.
