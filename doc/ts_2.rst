Набор тестов №2. ГСП: Компенсационные выплаты пострадавшим от радиации. Заявка на ГДВ на оплач. доп.отпуска по радиации. 
============================================================================================================================
**Человек: Фролова Оксана Вячеславовна** Все тесты работают на БД Контрольный пример - тест, ПО tu/aspnet. Вид АСП: Заявка на ГДВ на оплач. доп.отпуска по радиации, вид ГСП: Компенсационные выплаты пострадавшим от радиации. Загружает два заявления за 1 раз, они должны сесть двумя разными заявками, с разными номерами. Делает решения по обоим, проверяет результат. Делает выгрузку, потом новый ответ, проверяет. Проверяет известные ошибки с формирование файла otvet.txt и  создание заявок в АСП.

Тест №1
-------
Тест выполняет:
    #. Соединяется с БД ТИ.
    #. Перед загрузкой отмечаем все для района как загруженное.
    #. Удалет ответы на заявки человека на ТИ.
    #. Отмечает заявления человека к загрузке на ТИ.
    #. Отсоединяется от ТИ.
    #. Соединяется с АСП.
    #. Удаляет в АСП все не обработанные заявления.
    #. Удаляет по человеку с АСП заявления, ответы, скандоки.
    #. Отсоединяется от АСП.
    #. Пробует загрузить заявление.
    #. Ждет, когда отработает прогресс бар.


Тест №2
-------
Регистрирует два заявления, проверяет создание 2-х заявлений с заполненными F6, F6_izm. Проверяет уникальность номеров заявлений АСП (Ч1, Ч2 и т.п.).

    #. Захожу в госуслуги.
    #. Связывание с ПКУ.
    #. Устанавливаю фильтр по ФИО.
    #. Запись заявлений.
    #. сформировани список.
    #. Вот тут надо нажать на 1, в списке.
    #. Подождем прогресс запись заявок в БД.
    #. Выйти из записи.
    #. Проверить, как записалось. Для этого человека должно быть создано 2 f6.
    #. Соединяюсь с БД АСП.
    #. Получает кол-во заявлений и изменений к ним для человека.
    #. Закрыть соединение с БД.
    #. Проверяет, что их две пары.
    #. Проверяет, что каждый F6 и F6_IZM заполен.
    #. Проверить, что заявкам дали разные номера (например Ч1 и Ч2).
    #. Проверить, что номера дел одинаковые.


Тест №3
-------
Делает решение по 2-м принятым заявлениям. Обоим выставляет статус ОТКАЗ,
тестовый комментарий с указанием номера заявления и прикладывается один файл.
Решение сохраняет и возвращается в главное меню.

    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Перебираю два заявления.
        * Войти в заявку.
        * Новый ответ из обложки заявления.
        * Выставляет статус ИСПОЛНЕНО(3).
        * Заполняет комментарий.
        * Загружает файл.
        * Выходит из заявки.
    #. Выход в главное.

Тест №4
-------
Скриптом проверяет правильно ли сохранилось в БД принятое решение по 2-м заявления 265063t3 и 745323t4
(решения делались в тесте №3). Визуально проверяет, чтобы не было в прикрепленных файлах otvet.txt.

    #. Соединяется с БД.
    #. Проверяет по заявлению 265063t3.
    #. Проверяет по заявлению 745323t4.
    #. Закрывает соединение с БД.
    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Перебираю два заявления.
        * Войти в заявку.
        * Ищет на странице текст otvet.txt.
        * Выходит из заявки.
    #. Выход в главное.

Тест №5
-------
Пытается повторно ввести статус по заявления 265063t3 и 745323t4. Визуально проверяет чтобы не было в прикрепленных файлах otvet.txt после отправки
и во время ввода статуса.

    #. Соединяется с БД АСП.
    #. Устанавливаю время выгрузки для ответов, будто они выгружены.
    #. Отсоединяемся от ДБ АСП.
    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Перебираю два заявления.
        * Войти в заявку.
        * Ищет на странице текст otvet.txt.
        * Нажать на новый ответ.
        * Ищет на странице текст otvet.txt.
        * Выходит из заявки.
    #. Выход в главное.

Тест №6
-------
Заходит в заявление, вставляет комментарий из справочника, проверяет, что вставилось нормально.
Выходит без сохранения.

    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Перебираю два заявления.
        * Войти в заявку.
        * Нажать на новый ответ.
        * Ввести комментарий.
        * Заполняет комментарий.
        * Сделать вставку из справочника.
        * Сделать проверку, что в комментарии..
        * Выходит из заявки.
    #. Выход в главное.

Тест №7
-------
Проверяет известную ошибку, когда при добавлении решений и выгрузке каждого может сохранятся много файлов решений (otvet.txt). Заходит в заявление, делает два решения, выгрузку после каждого. Проверяет скриптом в БД, должен быть один файл otvet.txt.

    #. Соединяется с БД.
    #. Захожу в госуслуги.
    #. Устанавливаю фильтр по ФИО.
    #. Берет заявление 265063t3.
    #. Делает два решения и выгрузку после каждого.
        * Войти в заявку.
        * Нажать на новый ответ.
        * Выставляет статус ИСПОЛНЕНО(3).
        * Заполняет комментарий.
        * Сохраняет комментарий и статус.
        * Загружает файл.
        * Жду загрузки файла и выхожу.
        * Выходит из заявки.
        * Устанавливаю время выгрузки для ответов, будто они выгружены.
    #. Выход в главное.
    #. Спросить в БД сколько файлов otvet.txt к заявлению 265063t3.
    #. Отсоединяется от БД.
    #. Выполняется проверка, кол-во файлов otvet.txt по заявлению  265063t3  должно быть 1.

Тест №8
-------
Для заявления Ч2 выполнить назначение (для документа, принятого с ПГУ). Сделан Рыбкиной О., переделан мной для python.

    #. Войти в поиск.
    #. Заполнить ФИО.
    #. Нажать поиск.
    #. Перейти в ПКУ.
    #. Тут вставить команду перейти в заявку Ч2.
    #. Войти в заявку.
    #. Перейти на вкладку Выплатная информация.
    #. Вход в справочник способ выплаты.
    #. Выбрать банк.
    #. Выйти.
    #. Проверить право.
    #. Установить сумму.
    #. Провести назначение.
    #. Установить дату с.
    #. Установить дату по.
    #. Подтвердить назначение (нажать зеленую галочку).
    #. Нажать перевести на выплату.
    #. Сохранить и выйти.

Тест №9
-------
Проверяет ситуацию, когда хотели добавить новый документ, но передумали. Удалили документ, вышли без сохранения. 
Была ошибка, при которой статус заявления АСП менялся.

    #. Войти в поиск.
    #. Заполнить ФИО.
    #. Нажать поиск.
    #. Перейти в ПКУ.
    #. Настроить фильтр, чтобы были видны все заявки.
    #. Перейти в заявку Ч2.
    #. Войти в заявку.
    #. Добавить новый документ.
    #. Ввести дату нового документа.
    #. Подтвердить ввод.
    #. Удалить документ.
    #. Подтвердить удаление.
    #. Выйти без сохранения.
    #. Проверить, как изменился статус заявки Ч2. Должен остаться в Истёк срок действия.

Тест а1
--------
Заходит в заявление Ч2 и добавляет к нему новый документ вручную.

    #. Войти в поиск.
    #. Заполнить ФИО.
    #. Нажать поиск.
    #. Перейти в ПКУ.
    #. Настроить фильтр, чтобы были видны все заявки.
    #. Перейти в заявку Ч2.
    #. Войти в заявку.
    #. Добавить новый документ.
    #. Ввести дату нового документа.
    #. Подтвердить ввод.
    #. Проверить право.
    #. Установить сумму.
    #. Провести назначение.
    #. Установить дату с.
    #. Установить дату по.
    #. Подтвердить назначение (нажать зеленую галочку).
    #. Нажать перевести на выплату.
    #. Будет предупреждение о прекращении выплат, ответить ОК.
    #. Сохранить и выйти.

Тест a2
-------
Проверяет заявление Ч2. Для даты 10.01.2017 нет госуслуг, на дату 18.03.2016 есть.

Подготовка:
    #. Войти в поиск.
    #. Заполнить ФИО.
    #. Нажать поиск.
    #. Перейти в ПКУ.
    #. Настроить фильтр, чтобы были видны все заявки.
    #. Перейти в заявку Ч2.
        
Проверяет на обложке, для документа с датой 10.01.2017 (он введен вручную):
    #. Выбирает документ с датой 10.01.2017 (он введен вручную).
    #. Проверить статус, должен быть Назначено.
    #. Проверить что нет информера.
    #. Вкладка госуслуги есть, пробую ее развернуть.
    #. Проверяю, что внутри нее нет кнопки добавить новый ответ.

Проверяет на обложке, для документа на дату 18.03.2016, это документ введенный через госуслуги:
    #. Переключаюсь на дату 18.03.2016, это документ введенный через госуслуги.
    #. Проверить статус, должен быть Назначено.
    #. Проверить, что есть информер госуслуги.
    #. Проверить, что информер не пустой.
    #. Вкладка госуслуги есть, пробую ее развернуть.
    #. Проверить все необходимые поля в контроле.

Проверяет внутри заявления на дату 18.03.2016 (госуслуги):
    #. Зайти во внутрь заявления.
    #. Выбрать документы от 18.03.2016 (госуслуги).
    #. Проверить, что есть информер госуслуги.
    #. Проверить, что информер не пустой.
    #. Проверить, что есть вкладка госуслуги.
    #. Переключится на нее.
    #. Проверить все необходимые поля в контроле.
    #. Проверить, что тип документа - получено в электронном виде (Т).

Проверяет на дату 10.01.2017(ручной):
    #. Переключится на документ от 10.01.2017 (ручной).
    #. Проверить что нет информера.
    #. Проверяю, что внутри нее нет вкладки госуслуги.
    #. Проверить, что тип документа - ручной (Р).
    #. Нажимаю сохранить.
    #. Проверить, что сработало нормально, не упало в ошибку. Например проверю, что на экране есть поле для ФИО.
